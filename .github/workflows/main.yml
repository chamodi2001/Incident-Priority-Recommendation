name: Build and Deploy Incident Tracker

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
   
    - name: Log in to GitLab Container Registry
      run: echo "${{ secrets.GITLAB_TOKEN }}" | docker login registry.gitlab.com -u gitlab-ci-token --password-stdin



    - name: Build and Push Backend Image
      run: |
        docker build -t registry.gitlab.com/chamodigunathilaka2018/incidenttracker/incident-tracker-server:main ./incident-tracker-server
        docker push registry.gitlab.com/chamodigunathilaka2018/incidenttracker/incident-tracker-server:main

    - name: Build and Push Frontend Image
      run: |
        docker build -t registry.gitlab.com/chamodigunathilaka2018/incidenttracker/incident-tracker-client:main ./incident-tracker-client
        docker push registry.gitlab.com/chamodigunathilaka2018/incidenttracker/incident-tracker-client:main

       ####################################
       # STEP 3: Deploy to EC2
    - name: SSH into EC2 and Deploy via Docker Compose
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # 1. Ensure directory exists and clone repo if not already
          if [ ! -d "~/incident-tracker" ]; then
          echo "Cloning project repo..."
          git clone https://github.com/chamodigunathilaka2018/IncidentTracker.git ~/incident-tracker
          else
          echo "Repo directory exists. Pulling latest changes..."
          cd ~/incident-tracker
          git pull
          fi

         # 2. Install Docker Compose plugin if not available
         if ! docker compose version &>/dev/null; then
           echo "Installing Docker Compose plugin..."
           sudo mkdir -p /usr/local/lib/docker/cli-plugins
           sudo curl -SL https://github.com/docker/compose/releases/download/v2.24.6/docker-compose-linux-x86_64 \
           -o /usr/local/lib/docker/cli-plugins/docker-compose
           sudo chmod +x /usr/local/lib/docker/cli-plugins/docker-compose
         fi

         # 3. Continue deployment
         cd ~/incident-tracker
         echo "Logging into GitLab Registry..."
         echo "${{ secrets.GITLAB_TOKEN }}" | docker login registry.gitlab.com -u gitlab-ci-token --password-stdin

         echo "Pulling latest Docker images..."
         docker compose pull

         echo "Stopping old containers..."
         docker compose down

         echo "Starting new containers..."
         docker compose up -d
 
