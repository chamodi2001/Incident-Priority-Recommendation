name: Build and Deploy Incident Tracker

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout GitHub Repository
        uses: actions/checkout@v3
         ##########
      - name: Inject Gemini API Key into .env
        run: echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> ./incident-tracker-server/.env
         console.log('Gemini API Key:', process.env.GEMINI_API_KEY);
         ##########

      - name: Log in to GitLab Container Registry
        run: |
          echo "${{ secrets.GITLAB_TOKEN }}" | docker login registry.gitlab.com -u chamodigunathilaka2018 --password-stdin

      - name: Build and Push Backend Image
        run: |
          docker build -t registry.gitlab.com/chamodigunathilaka2018/incidenttracker/incident-tracker-server:main ./incident-tracker-server
          docker push registry.gitlab.com/chamodigunathilaka2018/incidenttracker/incident-tracker-server:main

      - name: Build and Push Frontend Image
        run: |
          docker build -t registry.gitlab.com/chamodigunathilaka2018/incidenttracker/incident-tracker-client:main ./incident-tracker-client
          docker push registry.gitlab.com/chamodigunathilaka2018/incidenttracker/incident-tracker-client:main

      - name: SSH into EC2 and Deploy
        uses: appleboy/ssh-action@master
        env:
          GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
          HUB_TOKEN: ${{ secrets.HUB_TOKEN }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: GITLAB_TOKEN,HUB_TOKEN
          script: |
            echo "===== Checking Docker & Docker Compose ====="
            if ! command -v docker >/dev/null 2>&1; then
              echo "Docker not found. Installing..."
              sudo yum install -y docker
              sudo systemctl enable docker
              sudo systemctl start docker
            fi

            if ! command -v docker-compose >/dev/null 2>&1; then
              echo "Docker Compose not found. Installing..."
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            echo "===== Installing Nginx & Certbot ====="
            if ! command -v nginx >/dev/null 2>&1; then
              sudo yum install -y nginx
              sudo systemctl enable nginx
              sudo systemctl start nginx
            fi

            if ! command -v certbot >/dev/null 2>&1; then
              sudo yum install -y certbot python3-certbot-nginx
            fi

            ######################################################################
            echo "===== Configuring Nginx reverse proxy ====="
            NGINX_CONF="/etc/nginx/conf.d/incidenttracker.conf"
            sudo tee $NGINX_CONF > /dev/null <<EOF
            # Redirect HTTP to HTTPS
            server {
            listen 80;
            server_name inctrack.space www.inctrack.space;
            return 301 https://\$host\$request_uri;
            }

            # HTTPS server block
            server {
            listen 443 ssl;
            server_name inctrack.space www.inctrack.space;

            ssl_certificate /etc/letsencrypt/live/inctrack.space/fullchain.pem;
            ssl_certificate_key /etc/letsencrypt/live/inctrack.space/privkey.pem;
            include /etc/letsencrypt/options-ssl-nginx.conf;
            ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

            location / {
                proxy_pass http://127.0.0.1:3000;
                proxy_set_header Host \$host;
                proxy_set_header X-Real-IP \$remote_addr;
                proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto \$scheme;
            }
            
            }
            EOF

            sudo nginx -t
            sudo systemctl reload nginx

            echo "===== Issuing SSL certificate ====="
            sudo certbot --nginx -d inctrack.space -d www.inctrack.space --non-interactive --agree-tos -m chamodigunathilaka2018@gmail.com
            sudo certbot renew --dry-run
            #############################################

            echo "===== Deploying Docker containers ====="
            cd /home/ec2-user
            if [ -d "IncidentTracker" ]; then
              cd IncidentTracker
              git checkout main
              git pull origin main
            else
              git clone --branch main https://$HUB_TOKEN@github.com/chamodi2001/IncidentTracker.git
              cd IncidentTracker
            fi

            docker-compose pull
            docker-compose down
            docker image prune -af 
            docker-compose up -d --build
            docker-compose ps
