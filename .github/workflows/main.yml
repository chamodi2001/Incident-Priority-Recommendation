name: Build and Deploy Incident Tracker

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout GitHub Repository
      uses: actions/checkout@v3

    - name: Build and Push Backend Image
      run: |
        docker build -t registry.gitlab.com/chamodigunathilaka2018/incidenttracker/incident-tracker-server:main ./incident-tracker-server
        docker push registry.gitlab.com/chamodigunathilaka2018/incidenttracker/incident-tracker-server:main


    - name: Build and Push Frontend Image
      run: |
        docker build -t registry.gitlab.com/chamodigunathilaka2018/incidenttracker/incident-tracker-client:main ./incident-tracker-client
        docker push registry.gitlab.com/chamodigunathilaka2018/incidenttracker/incident-tracker-client:main

    

    - name: SSH into EC2 and Deploy via Docker Compose
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
         echo " Connected to EC2. Verifying environment..."
         whoami
         hostname
         pwd
          cd /home/ec2-user

          if [ -d "IncidentTracker" ]; then
            echo "Directory exists. Pulling latest changes..."
            cd IncidentTracker
            git pull origin main
            git checkout main
          else
            echo "Cloning the repository..."
            git clone --branch main https://${{ secrets.HUB_TOKEN }}@github.com/chamodigunathilaka2018/IncidentTracker.git
            cd IncidentTracker
          fi

          echo "Logging in to GitLab Container Registry"
          echo "${{ secrets.GITLAB_TOKEN }}" | docker login registry.gitlab.com -u gitlab-ci-token --password-stdin

          echo "Pulling latest images"
          docker compose pull

          echo "Stopping old containers"
          docker compose down

          echo "Starting containers"
          docker compose up -d
